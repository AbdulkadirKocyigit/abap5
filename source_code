REPORT zbk_egt_0014.

DATA: gv_fmname      TYPE rs38l_fnam,
      gs_controls    TYPE ssfctrlop,
      gs_out_opt     TYPE ssfcompop,
      gt_vbap        TYPE TABLE OF vbap,
      gv_vbeln       TYPE vbeln_va,
      lv_pdf_xstring TYPE xstring,
      lt_pdf_bin     TYPE solix_tab,
      lv_bin_size    TYPE i,
      go_container   TYPE REF TO cl_gui_custom_container,
      go_html        TYPE REF TO cl_gui_html_viewer,
      lv_pdf_path    TYPE string,
      gv_url         TYPE string.

SELECT-OPTIONS s_vbeln FOR gv_vbeln.

START-OF-SELECTION.



  " VBAP verisini al
  SELECT * FROM vbap
    INTO TABLE gt_vbap
    WHERE vbeln IN s_vbeln.

  DATA: gv_sayfa_degistir TYPE c LENGTH 1.

  IF gt_vbap IS INITIAL.
    gv_sayfa_degistir = space. " Veri yoksa 2. sayfaya geçilmesin
  ELSE.
    gv_sayfa_degistir = 'X'.    " Veri varsa 2. sayfa gelsin
  ENDIF.

  " SmartForm adını al
  CALL FUNCTION 'SSF_FUNCTION_MODULE_NAME'
    EXPORTING
      formname = 'ZINV_TRACKING_FORM'
    IMPORTING
      fm_name  = gv_fmname.

  " OTF çıktısı al
  gs_controls-no_dialog = 'X'.
  gs_controls-getotf    = 'X'.
  gs_controls-preview   = ' '.
  gs_out_opt-tdnoprev   = 'X'.
  gs_out_opt-tdprinter = ' '.
  gs_out_opt-tdprinter = ' '.

  DATA: ls_output_info TYPE ssfcrescl.

  CALL FUNCTION gv_fmname
    EXPORTING
      control_parameters = gs_controls
      output_options     = gs_out_opt
      user_settings      = ' '
      gv_sayfa_degistir  = 'X'
      it_vbap            = gt_vbap  " Buraya gönderiyorsun
    IMPORTING
      job_output_info    = ls_output_info.

  IF ls_output_info-otfdata IS INITIAL.
    MESSAGE 'SmartForm OTF verisi boş! Form çıktısı oluşmamış olabilir.' TYPE 'E'.
  ENDIF.

*  CALL FUNCTION '/1BCDWB/SF00000313'
*    EXPORTING
***   ARCHIVE_INDEX              =
***   ARCHIVE_INDEX_TAB          =
***   ARCHIVE_PARAMETERS         =
*      control_parameters = gs_controls
***   MAIL_APPL_OBJ              =
***   MAIL_RECIPIENT             =
***   MAIL_SENDER                =
*      output_options     = gs_out_opt
***   USER_SETTINGS              = 'X'
***   IV_ORDER_ID                =
***   IV_INVOICE_NO              =
***   IV_CUSTOMER_NAME           =
***   IV_DATE                    =
***   IV_TIME                    =
***   IV_STATUS                  =
*      it_vbap            = gt_vbap
*    IMPORTING
***   DOCUMENT_OUTPUT_INFO       =
*      job_output_info    = ls_output_info
***   JOB_OUTPUT_OPTIONS         =
*    EXCEPTIONS
*      formatting_error   = 1
*      internal_error     = 2
*      send_error         = 3
*      user_canceled      = 4
*      OTHERS             = 5.
*  IF sy-subrc <> 0.
*    implement suitable error handling here.
*  ENDIF.


  DATA: lt_lines TYPE TABLE OF tline.

  CALL FUNCTION 'CONVERT_OTF'
    EXPORTING
      format                = 'PDF'
    IMPORTING
      bin_file              = lv_pdf_xstring
    TABLES
      otf                   = ls_output_info-otfdata
      lines                 = lt_lines
    EXCEPTIONS
      err_max_linewidth     = 1
      err_format            = 2
      err_conv_not_possible = 3
      OTHERS                = 4.

  " Ekrana geç
  CALL SCREEN 0100.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS 'ZPDF_STATUS'.
  MESSAGE 'SET PF-STATUS çalıştı' TYPE 'I'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  INIT_CONTAINER  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE init_container OUTPUT.
  IF go_container IS INITIAL.

    " Kullanıcıdan dosya kaydedilecek yeri al
    DATA: lv_filename TYPE string,
          lv_path     TYPE string,
          lv_result   TYPE i,
          lv_user_act TYPE i.

    CALL METHOD cl_gui_frontend_services=>file_save_dialog
      EXPORTING
        default_extension = 'pdf'
        default_file_name = 'smartform_output.pdf'
        file_filter       = 'PDF Files (*.pdf)|*.pdf|All Files (*.*)|*.*'
      CHANGING
        filename          = lv_filename
        path              = lv_path
        fullpath          = lv_pdf_path
        user_action       = lv_user_act
      EXCEPTIONS
        OTHERS            = 1.

    IF lv_user_act <> cl_gui_frontend_services=>action_ok.
      MESSAGE 'Kullanıcı işlemi iptal etti.' TYPE 'I'.
      RETURN.
    ENDIF.

    " PDF binary'e dönüştür
    CALL FUNCTION 'SCMS_XSTRING_TO_BINARY'
      EXPORTING
        buffer          = lv_pdf_xstring
        append_to_table = ' '
      IMPORTING
        output_length   = lv_bin_size
      TABLES
        binary_tab      = lt_pdf_bin.

    " PDF'yi seçilen yola yaz
    CALL METHOD cl_gui_frontend_services=>gui_download
      EXPORTING
        filename     = lv_pdf_path
        filetype     = 'BIN'
        bin_filesize = lv_bin_size
      CHANGING
        data_tab     = lt_pdf_bin.

    " HTML container oluştur (görüntülemek için)
    CREATE OBJECT go_container
      EXPORTING
        container_name = 'CUST_CONTAINER'.

    CREATE OBJECT go_html
      EXPORTING
        parent = go_container.

  ENDIF.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  CASE sy-ucomm.
    WHEN '&ZEXIT'.
      LEAVE PROGRAM.
    WHEN '&ZDOWNLD'.
      PERFORM save_pdf_to_desktop.
  ENDCASE.
ENDMODULE.

FORM save_pdf_to_desktop.

  DATA: lv_fullpath TYPE string,
        lv_filename TYPE string,
        lv_path     TYPE string,
        lv_result   TYPE i,
        lv_user_act TYPE i,
        lt_pdf_bin  TYPE solix_tab,
        lv_bin_size TYPE i.

  " 1. Dosya kaydetme diyalogu açılır
  CALL METHOD cl_gui_frontend_services=>file_save_dialog
    EXPORTING
      default_extension = 'pdf'
      default_file_name = 'smartform_output.pdf'
      file_filter       = 'PDF Files (*.pdf)|*.pdf|All Files (*.*)|*.*'
    CHANGING
      filename          = lv_filename
      path              = lv_path
      fullpath          = lv_fullpath
      user_action       = lv_user_act
    EXCEPTIONS
      OTHERS            = 1.

  " Kullanıcı işlemi iptal ettiyse çık
  IF lv_user_act <> cl_gui_frontend_services=>action_ok.
    MESSAGE 'İşlem kullanıcı tarafından iptal edildi.' TYPE 'I'.
    RETURN.
  ENDIF.

  " 2. PDF içeriğini binary'e çevir
  CALL FUNCTION 'SCMS_XSTRING_TO_BINARY'
    EXPORTING
      buffer          = lv_pdf_xstring
      append_to_table = ' '
    IMPORTING
      output_length   = lv_bin_size
    TABLES
      binary_tab      = lt_pdf_bin.

  " 3. Binary'i dosyaya kaydet
  CALL METHOD cl_gui_frontend_services=>gui_download
    EXPORTING
      filename     = lv_fullpath
      filetype     = 'BIN'
      bin_filesize = lv_bin_size
    CHANGING
      data_tab     = lt_pdf_bin
    EXCEPTIONS
      OTHERS       = 1.

  IF sy-subrc = 0.
    MESSAGE |PDF başarıyla kaydedildi: { lv_fullpath }| TYPE 'S'.
  ELSE.
    MESSAGE 'Kaydetme sırasında hata oluştu.' TYPE 'E'.
  ENDIF.

ENDFORM.
